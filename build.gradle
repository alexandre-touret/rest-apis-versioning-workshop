plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
    id 'java'
    id 'idea'
    id 'org.openapi.generator' version "${openApiGeneratorVersion}"
}

bootJar {
    enabled = false
}

allprojects {
    apply plugin: 'java'

    group = 'info.touret.apiversionning'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '17'

    repositories {
        mavenCentral()
    }

    test {
        useJUnitPlatform()
    }

}

subprojects {

    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = '17'

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }


    dependencies {
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        implementation 'io.opentracing.contrib:opentracing-spring-jaeger-cloud-starter:3.3.1'
        implementation 'io.micrometer:micrometer-registry-prometheus'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
    }

    bootJar {
        enabled = true
    }
}
project(':rest-book') {
    apply plugin: 'org.openapi.generator'
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        runtimeOnly 'org.postgresql:postgresql'
        testImplementation 'com.h2database:h2'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
        implementation 'org.springframework.cloud:spring-cloud-starter-config'
        implementation 'io.github.resilience4j:resilience4j-spring-boot2'
        implementation 'org.springframework.boot:spring-boot-starter-aop'
        implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
        implementation 'com.fasterxml.jackson.core:jackson-annotations'
        implementation 'org.mapstruct:mapstruct:1.5.3.Final'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
    }
    openApiValidate {
        inputSpec = "$projectDir/src/main/resources/openapi.yml".toString()
        recommend = true
    }
    openApiGenerate {
        generatorName = "spring"
        library = "spring-boot"
        modelNameSuffix = "Dto"
        inputSpec = "$projectDir/src/main/resources/openapi.yml".toString()
        outputDir = "$buildDir/generated".toString()
        apiPackage = "info.touret.apiversionning.book.generated.controller"
        invokerPackage = "info.touret.apiversionning.book.generated.invoker"
        modelPackage = "info.touret.apiversionning.book.generated.dto"
        configOptions = [
                dateLibrary          : "java8",
                java8                : "true",
                openApiNullable      : "false",
                serializationLibrary : "jackson",
                documentationProvider: "springdoc",
                useBeanValidation    : "true",
                useSpringController  : "true",
                serializableModel    : "true"
        ]
    }
    tasks.withType(JavaCompile) {
        options.compilerArgs = [
                '-Amapstruct.suppressGeneratorTimestamp=true',
                '-Amapstruct.suppressGeneratorVersionInfoComment=true',
                '-Amapstruct.defaultComponentModel=spring'
        ]
    }

    springBoot{
        mainClass = "info.touret.bookstore.spring.RestBookstoreApplication"
    }
    sourceSets.main.java.srcDirs += "$buildDir/generated/src/main/java".toString()
    compileJava.dependsOn 'openApiGenerate'
}

project(':rest-number') {
    apply plugin: 'org.openapi.generator'
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
        implementation 'org.springframework.cloud:spring-cloud-starter-config'
        implementation 'io.github.resilience4j:resilience4j-spring-boot2'
        implementation 'org.springframework.boot:spring-boot-starter-aop'
        implementation 'org.springdoc:springdoc-openapi-ui:1.6.12'
        implementation 'com.fasterxml.jackson.core:jackson-annotations'
        implementation 'com.github.javafaker:javafaker:1.0.2'
        implementation 'org.yaml:snakeyaml:1.33'
        implementation 'org.mapstruct:mapstruct:1.5.3.Final'
        annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'

    }

    openApiValidate {
        inputSpec = "$projectDir/src/main/resources/openapi.yml".toString()
        recommend = true
    }
    openApiGenerate {
        generatorName = "spring"
        library = "spring-boot"
        modelNameSuffix = "Dto"
        inputSpec = "$projectDir/src/main/resources/openapi.yml".toString()
        outputDir = "$buildDir/generated".toString()
        apiPackage = "info.touret.apiversionning.number.generated.controller"
        invokerPackage = "info.touret.apiversionning.number.generated.invoker"
        modelPackage = "info.touret.apiversionning.number.generated.dto"
        configOptions = [
                dateLibrary          : "java8",
                java8                : "true",
                openApiNullable      : "false",
                serializationLibrary : "jackson",
                documentationProvider: "springdoc",
                useBeanValidation    : "true",
                useSpringController  : "true",
                serializableModel    : "true"
        ]
    }
    tasks.withType(JavaCompile) {
        options.compilerArgs = [
                '-Amapstruct.suppressGeneratorTimestamp=true',
                '-Amapstruct.suppressGeneratorVersionInfoComment=true',
                '-Amapstruct.defaultComponentModel=spring'
        ]
    }
    springBoot{
        mainClass = "info.touret.bookstore.spring.number.RestNumbersApplication"
    }
    sourceSets.main.java.srcDirs += "$buildDir/generated/src/main/java".toString()


    compileJava.dependsOn 'openApiGenerate'
}

project(':gateway') {
    dependencies {
        implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
    }

}

project(':config-server') {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.cloud:spring-cloud-config-server'
    }

}