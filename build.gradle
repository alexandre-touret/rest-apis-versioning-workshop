plugins {
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
    id 'java'
    id 'idea'
}

bootJar {
    enabled = false
}

allprojects {
    apply plugin: 'java'

    group = 'info.touret.apiversionning'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '17'

    repositories {
        mavenCentral()
    }

    test {
        useJUnitPlatform()
    }

}

subprojects {

    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = '17'

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }


    dependencies {
        developmentOnly 'org.springframework.boot:spring-boot-devtools'
        implementation 'io.opentracing.contrib:opentracing-spring-jaeger-cloud-starter:3.3.1'
        implementation 'io.micrometer:micrometer-registry-prometheus'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        implementation 'org.springframework.boot:spring-boot-starter-actuator'
    }


    bootJar {
        enabled = true
    }

}
project(':rest-book') {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        runtimeOnly 'org.postgresql:postgresql'
        testImplementation 'com.h2database:h2'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
        implementation 'org.springframework.cloud:spring-cloud-starter-config'
        implementation 'io.github.resilience4j:resilience4j-spring-boot2'
        implementation 'org.springframework.boot:spring-boot-starter-aop'
        implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
        implementation 'com.fasterxml.jackson.core:jackson-annotations'
    }
}

project(':rest-number') {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
        implementation 'org.springframework.cloud:spring-cloud-starter-config'
        implementation 'io.github.resilience4j:resilience4j-spring-boot2'
        implementation 'org.springframework.boot:spring-boot-starter-aop'
        implementation 'org.springdoc:springdoc-openapi-ui:1.6.12'
        implementation 'com.fasterxml.jackson.core:jackson-annotations'
        implementation 'com.github.javafaker:javafaker:1.0.2'
        implementation 'org.yaml:snakeyaml:1.33'
    }
}

project(':gateway'){
    dependencies {
        implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
    }
}


project(':config-server'){
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.cloud:spring-cloud-config-server'
    }


}